generator client {
  provider      = "prisma-client-js"
  engineType    = "binary"
  binaryTargets = ["native", "darwin-arm64"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int           @id @default(autoincrement())

  fortytwoId        Int           @unique
  username          String        @unique
  firstName         String
  lastName          String
  profilePicture    String
  email             String

  has2FA            Boolean
  twoFactorSecret   String?

  friends           User[]        @relation("FriendsList")
  friendOf          User[]        @relation("FriendsList")
  
  blockedUsers      User[]        @relation("BlockedList")
  blockedBy         User[]        @relation("BlockedList")

  createdAt         DateTime      @default(now())

  channelsOwned     Channel[]
  channels          ChannelUser[]
  messages          Message[]

  elo               Int           @default(1000)
  wins              Int           @default(0)
  draws             Int           @default(0)
  losses            Int           @default(0)

  matchHistory      Game[]
  achievements      String[]
}

model Game {
  id                Int           @id @default(autoincrement())

  players           User[]
  playerOneId       Int
  playerTwoId       Int
  playerOneScore    Int           @default(0)
  playerTwoScore    Int           @default(0)

  status            String        // waiting, playing, finished

  createdAt         DateTime      @default(now())

  launchedAt        DateTime?
  finishedAt        DateTime?
}

model Channel {
  id                Int           @id @default(autoincrement())

  isPrivate         Boolean       @default(false)

  ownerId           Int
  owner             User          @relation(fields: [ownerId], references: [id])

  users             ChannelUser[]

  bannedUserIds     Int[]

  isProtected       Boolean       @default(false)
  password          String?

  createdAt         DateTime      @default(now())
}

model ChannelUser {
  channelId         Int
  channel           Channel       @relation(fields: [channelId], references: [id])

  userId            Int
  user              User          @relation(fields: [userId], references: [id])

  isAdmin           Boolean       @default(false)
  mutedUntil        DateTime?

  createdAt         DateTime      @default(now())

  @@id([channelId, userId])
}

model Message {
  id                Int           @id @default(autoincrement())

  channelId         Int
  userId            Int
  user              User          @relation(fields: [userId], references: [id])
  message           String

  gameId            Int?

  createdAt         DateTime      @default(now())
}
